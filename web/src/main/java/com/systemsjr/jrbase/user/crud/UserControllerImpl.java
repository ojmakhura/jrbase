// license-header java merge-point
// Generated by andromda-jsf cartridge (controllers\crud\ControllerImpl.java.vsl) on 02/06/2013 16:36:29+0200
package com.systemsjr.jrbase.user.crud;

import java.io.Serializable;

import org.andromda.presentation.jsf.Messages;
import org.apache.commons.io.IOUtils;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

import com.systemsjr.jrbase.ManageableServiceLocator;
import com.systemsjr.jrbase.user.crud.ManageUserForm;

/**
 * @see com.systemsjr.jrbase.user.crud.UserController
 */
public class UserControllerImpl extends UserController implements Serializable {
	/**
	 * The serial version UID of this class. Needed for serialization.
	 */
	private static final long serialVersionUID = -4828360535682586692L;

	/**
	 * Saves instance action.
	 * 
	 * @param form
	 * @throws Exception
	 */
	public void doSave(ManageUserForm form) throws Exception {
		PasswordEncoder passwordEncoder = new BCryptPasswordEncoder();
		if (form.getId() == null || form.getId() == 0) {
			form.setId(ManageableServiceLocator
					.instance()
					.getUserManageableService()
					.create(form.getStatus(),
							form.getUsername(),
							passwordEncoder.encode(form.getPassword()),
							form.getPhoto() == null ? null : IOUtils
									.toByteArray(form.getPhoto()
											.getInputStream()), form.getName(),
							form.getEmail(), form.getPasswordLength(),
							form.getUserId(), null, form.getUserLocations(),
							form.getUserRoles(), form.getUserClearanceLevels(),
							form.getIndividual(), form.getLoginSessions(),
							form.getPrograms(), form.getMenus()).getId());
			this.addInfoMessage(Messages.get("manageable.entity.created",
					new Object[] { Messages.get("user") }));
		} else {
			ManageableServiceLocator
					.instance()
					.getUserManageableService()
					.update(form.getStatus(),
							form.getUsername(),
							passwordEncoder.encode(form.getPassword()),
							form.getPhoto() == null ? null : IOUtils
									.toByteArray(form.getPhoto()
											.getInputStream()), form.getName(),
							form.getEmail(), form.getPasswordLength(),
							form.getUserId(), form.getId(),
							form.getUserLocations(), form.getUserRoles(),
							form.getUserClearanceLevels(),
							form.getIndividual(), form.getLoginSessions(),
							form.getPrograms(), form.getMenus());
			this.addInfoMessage(Messages.get("manageable.entity.changed",
					new Object[] { Messages.get("user") }));
		}
		if (form.getManageableList() != null) // only searches again if there
												// was an old search
			doSearch(form); // search again to show the updated item (if it fits
							// the search criteria)

		form.setEditState(false);
	}
}