// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 01/26/2019 23:54:27+0000.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package com.systemsjr.jrbase.workbench.application;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Repository;

import com.systemsjr.jrbase.workbench.application.vo.ApplicationSearchCriteria;
import com.systemsjr.jrbase.workbench.application.vo.ApplicationVO;

/**
 * @see Application
 */
@Repository
public class ApplicationDaoImpl extends ApplicationDaoBase {
	/**
	 * {@inheritDoc}
	 */
	protected List handleFindByCriteria(ApplicationSearchCriteria searchCriteria) {
		Criteria criteria = getSession().createCriteria(Application.class);

		if (searchCriteria.getCode() != null) {
			criteria.add(Restrictions.ilike("code", "%" + searchCriteria.getCode() + "%"));
		}

		if (searchCriteria.getName() != null) {
			criteria.add(Restrictions.ilike("name", "%" + searchCriteria.getName() + "%"));
		}

		if (searchCriteria.getDescription() != null) {
			criteria.add(Restrictions.ilike("description", "%" + searchCriteria.getDescription() + "%"));
		}

		return criteria.list();
	}

	/**
	 * {@inheritDoc}
	 */
	public void toApplicationVO(Application source, ApplicationVO target) {
		// TODO verify behavior of toApplicationVO
		super.toApplicationVO(source, target);
	}

	/**
	 * {@inheritDoc}
	 */
	public ApplicationVO toApplicationVO(final Application entity) {
		// TODO verify behavior of toApplicationVO
		return super.toApplicationVO(entity);
	}

	/**
	 * Retrieves the entity object that is associated with the specified value
	 * object from the object store. If no such entity object exists in the object
	 * store, a new, blank entity is created
	 */
	private Application loadApplicationFromApplicationVO(ApplicationVO applicationVO) {
		
		Application application = Application.Factory.newInstance();
		
		if(applicationVO.getId() != null)
		{
			application = this.load(applicationVO.getId());
		}
		
		return application;
	}

	/**
	 * {@inheritDoc}
	 */
	public Application applicationVOToEntity(ApplicationVO applicationVO) {
		// TODO verify behavior of applicationVOToEntity
		Application entity = this.loadApplicationFromApplicationVO(applicationVO);
		this.applicationVOToEntity(applicationVO, entity, true);
		return entity;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void applicationVOToEntity(ApplicationVO source, Application target, boolean copyIfNull) {
		// TODO verify behavior of applicationVOToEntity
		super.applicationVOToEntity(source, target, copyIfNull);
	}
}