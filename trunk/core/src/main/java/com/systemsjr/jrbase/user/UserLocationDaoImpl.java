// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package com.systemsjr.jrbase.user;

import com.systemsjr.jrbase.user.vo.UserLocationVO;

/**
 * @see UserLocation
 */
public class UserLocationDaoImpl
    extends UserLocationDaoBase
{
    /**
     * {@inheritDoc}
     */
    public void toUserLocationVO(
        UserLocation source,
        UserLocationVO target)
    {
        // TODO verify behavior of toUserLocationVO
        super.toUserLocationVO(source, target);
        // WARNING! No conversion for target.user (can't convert source.getUser():com.systemsjr.jrbase.user.User to com.systemsjr.jrbase.user.vo.UserVO
        // WARNING! No conversion for target.location (can't convert source.getLocation():com.systemsjr.jrbase.location.Location to com.systemsjr.jrbase.location.vo.LocationVO
    }

    /**
     * {@inheritDoc}
     */
    public UserLocationVO toUserLocationVO(final UserLocation entity)
    {
        // TODO verify behavior of toUserLocationVO
        return super.toUserLocationVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private UserLocation loadUserLocationFromUserLocationVO(UserLocationVO userLocationVO)
    {
        // TODO implement loadUserLocationFromUserLocationVO
        throw new UnsupportedOperationException("com.systemsjr.jrbase.user.loadUserLocationFromUserLocationVO(UserLocationVO) not yet implemented.");

        /* A typical implementation looks like this:
        UserLocation userLocation = this.get(userLocationVO.getId());
        if (userLocation == null)
        {
            userLocation = UserLocation.Factory.newInstance();
        }
        return userLocation;
        */
    }

    /**
     * {@inheritDoc}
     */
    public UserLocation userLocationVOToEntity(UserLocationVO userLocationVO)
    {
        // TODO verify behavior of userLocationVOToEntity
        UserLocation entity = this.loadUserLocationFromUserLocationVO(userLocationVO);
        this.userLocationVOToEntity(userLocationVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void userLocationVOToEntity(
        UserLocationVO source,
        UserLocation target,
        boolean copyIfNull)
    {
        // TODO verify behavior of userLocationVOToEntity
        super.userLocationVOToEntity(source, target, copyIfNull);
    }
}