// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package com.systemsjr.jrbase.organisation;

import com.systemsjr.jrbase.organisation.vo.OrganisationSearchCriteria;
import com.systemsjr.jrbase.organisation.vo.OrganisationVO;
import java.util.List;

/**
 * @see Organisation
 */
public class OrganisationDaoImpl
    extends OrganisationDaoBase
{
    /**
     * {@inheritDoc}
     */
    protected List handleFindByCriteria(OrganisationSearchCriteria searchCriteria)
    {
        // TODO implement public List handleFindByCriteria(OrganisationSearchCriteria searchCriteria)
        return null;
}

    /**
     * {@inheritDoc}
     */
    public void toOrganisationVO(
        Organisation source,
        OrganisationVO target)
    {
        // TODO verify behavior of toOrganisationVO
        super.toOrganisationVO(source, target);
        // WARNING! No conversion for target.organisationType (can't convert source.getOrganisationType():com.systemsjr.jrbase.organisation.OrganisationType to com.systemsjr.jrbase.organisation.vo.OrganisationTypeVO
        // WARNING! No conversion for target.organisationLocations (can't convert source.getOrganisationLocations():com.systemsjr.jrbase.location.Location to com.systemsjr.jrbase.location.vo.LocationVO[]
    }

    /**
     * {@inheritDoc}
     */
    public OrganisationVO toOrganisationVO(final Organisation entity)
    {
        // TODO verify behavior of toOrganisationVO
        return super.toOrganisationVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Organisation loadOrganisationFromOrganisationVO(OrganisationVO organisationVO)
    {
        // TODO implement loadOrganisationFromOrganisationVO
        throw new UnsupportedOperationException("com.systemsjr.jrbase.organisation.loadOrganisationFromOrganisationVO(OrganisationVO) not yet implemented.");

        /* A typical implementation looks like this:
        Organisation organisation = this.get(organisationVO.getId());
        if (organisation == null)
        {
            organisation = Organisation.Factory.newInstance();
        }
        return organisation;
        */
    }

    /**
     * {@inheritDoc}
     */
    public Organisation organisationVOToEntity(OrganisationVO organisationVO)
    {
        // TODO verify behavior of organisationVOToEntity
        Organisation entity = this.loadOrganisationFromOrganisationVO(organisationVO);
        this.organisationVOToEntity(organisationVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void organisationVOToEntity(
        OrganisationVO source,
        Organisation target,
        boolean copyIfNull)
    {
        // TODO verify behavior of organisationVOToEntity
        super.organisationVOToEntity(source, target, copyIfNull);
    }
}