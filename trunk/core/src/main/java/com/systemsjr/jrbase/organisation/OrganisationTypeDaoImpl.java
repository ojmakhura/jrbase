// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package com.systemsjr.jrbase.organisation;

import com.systemsjr.jrbase.organisation.vo.OrganisationTypeSearchCriteria;
import com.systemsjr.jrbase.organisation.vo.OrganisationTypeVO;
import java.util.List;

/**
 * @see OrganisationType
 */
public class OrganisationTypeDaoImpl
    extends OrganisationTypeDaoBase
{
    /**
     * {@inheritDoc}
     */
    protected List handleFindByCriteria(OrganisationTypeSearchCriteria searchCriteria)
    {
        // TODO implement public List handleFindByCriteria(OrganisationTypeSearchCriteria searchCriteria)
        return null;
}

    /**
     * {@inheritDoc}
     */
    public void toOrganisationTypeVO(
        OrganisationType source,
        OrganisationTypeVO target)
    {
        // TODO verify behavior of toOrganisationTypeVO
        super.toOrganisationTypeVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    public OrganisationTypeVO toOrganisationTypeVO(final OrganisationType entity)
    {
        // TODO verify behavior of toOrganisationTypeVO
        return super.toOrganisationTypeVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private OrganisationType loadOrganisationTypeFromOrganisationTypeVO(OrganisationTypeVO organisationTypeVO)
    {
        // TODO implement loadOrganisationTypeFromOrganisationTypeVO
        throw new UnsupportedOperationException("com.systemsjr.jrbase.organisation.loadOrganisationTypeFromOrganisationTypeVO(OrganisationTypeVO) not yet implemented.");

        /* A typical implementation looks like this:
        OrganisationType organisationType = this.get(organisationTypeVO.getId());
        if (organisationType == null)
        {
            organisationType = OrganisationType.Factory.newInstance();
        }
        return organisationType;
        */
    }

    /**
     * {@inheritDoc}
     */
    public OrganisationType organisationTypeVOToEntity(OrganisationTypeVO organisationTypeVO)
    {
        // TODO verify behavior of organisationTypeVOToEntity
        OrganisationType entity = this.loadOrganisationTypeFromOrganisationTypeVO(organisationTypeVO);
        this.organisationTypeVOToEntity(organisationTypeVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void organisationTypeVOToEntity(
        OrganisationTypeVO source,
        OrganisationType target,
        boolean copyIfNull)
    {
        // TODO verify behavior of organisationTypeVOToEntity
        super.organisationTypeVOToEntity(source, target, copyIfNull);
    }
}