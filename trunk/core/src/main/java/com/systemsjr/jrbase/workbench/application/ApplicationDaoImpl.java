// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package com.systemsjr.jrbase.workbench.application;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.criterion.Restrictions;

import com.systemsjr.jrbase.workbench.application.vo.ApplicationSearchCriteria;
import com.systemsjr.jrbase.workbench.application.vo.ApplicationVO;

/**
 * @see Application
 */
public class ApplicationDaoImpl
    extends ApplicationDaoBase
{
    /**
     * {@inheritDoc}
     */
    public void toApplicationVO(
        Application source,
        ApplicationVO target)
    {
        super.toApplicationVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    public ApplicationVO toApplicationVO(final Application entity)
    {
        // TODO verify behavior of toApplicationVO
        return super.toApplicationVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Application loadApplicationFromApplicationVO(ApplicationVO applicationVO)
    {
        
        Application application = null;
        if (applicationVO.getId() == null)
        {
            application = Application.Factory.newInstance();
        } else{
        	application = this.get(applicationVO.getId());
        }
        return application;
       
    }

    /**
     * {@inheritDoc}
     */
    public Application applicationVOToEntity(ApplicationVO applicationVO)
    {
        System.out.println(applicationVO.getCode());
        System.out.println(applicationVO.getName());
        System.out.println(applicationVO.getDescription());
        Application entity = this.loadApplicationFromApplicationVO(applicationVO);
        this.applicationVOToEntity(applicationVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void applicationVOToEntity(
        ApplicationVO source,
        Application target,
        boolean copyIfNull)
    {
        // TODO verify behavior of applicationVOToEntity
        super.applicationVOToEntity(source, target, copyIfNull);
    }

	@Override
	protected List handleFindByCriteria(
			ApplicationSearchCriteria searchCriteria) throws Exception {
		Criteria criteria = getSession().createCriteria(Application.class);
		
		if(searchCriteria.getCode() != null){
			criteria.add(Restrictions.ilike("code", searchCriteria.getCode()));
		}
		
		if(searchCriteria.getName() != null){
			criteria.add(Restrictions.ilike("name", searchCriteria.getName()));
		}
		
		if(searchCriteria.getDescription() != null){
			criteria.add(Restrictions.ilike("description", searchCriteria.getDescription()));
		}
		
		return criteria.list();
	}
}