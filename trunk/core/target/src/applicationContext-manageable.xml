<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

    <!-- CRUD Service Transactional Interceptor -->
    <bean id="manageableServiceTransactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager"><ref bean="transactionManager"/></property>
        <property name="transactionAttributeSource">
            <value>
                com.jrsystems.jrbase.individual.crud.IndividualManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.individual.crud.IndividualManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.individual.crud.IndividualManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.individual.crud.IndividualManageableService.readBackingLists=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.individual.crud.IndividualManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.individual.crud.IndividualManageableService.delete=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserManageableService.getPhoto=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserManageableService.readBackingLists=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserManageableService.delete=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserLocationManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserLocationManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserLocationManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserLocationManageableService.readBackingLists=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserLocationManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.user.crud.UserLocationManageableService.delete=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.organisation.crud.OrganisationManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.organisation.crud.OrganisationManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.organisation.crud.OrganisationManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.organisation.crud.OrganisationManageableService.readBackingLists=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.organisation.crud.OrganisationManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.organisation.crud.OrganisationManageableService.delete=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableService.readBackingLists=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableService.delete=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.location.crud.LocationTypeManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.location.crud.LocationTypeManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.location.crud.LocationTypeManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.location.crud.LocationTypeManageableService.readBackingLists=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.location.crud.LocationTypeManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.location.crud.LocationTypeManageableService.delete=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.location.crud.LocationManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.location.crud.LocationManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.location.crud.LocationManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.location.crud.LocationManageableService.readBackingLists=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.location.crud.LocationManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.location.crud.LocationManageableService.delete=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.counter.crud.CounterManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.counter.crud.CounterManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.counter.crud.CounterManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.counter.crud.CounterManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.counter.crud.CounterManageableService.delete=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.role.crud.RoleManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.role.crud.RoleManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.role.crud.RoleManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.role.crud.RoleManageableService.readBackingLists=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.role.crud.RoleManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.role.crud.RoleManageableService.delete=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableService.readBackingLists=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableService.delete=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableService.readBackingLists=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableService.delete=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.workbench.program.crud.ProgramManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.workbench.program.crud.ProgramManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.workbench.program.crud.ProgramManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.workbench.program.crud.ProgramManageableService.readBackingLists=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.workbench.program.crud.ProgramManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.workbench.program.crud.ProgramManageableService.delete=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.workbench.menu.crud.MenuManageableService.create=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.workbench.menu.crud.MenuManageableService.read=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.workbench.menu.crud.MenuManageableService.readAll=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.workbench.menu.crud.MenuManageableService.readBackingLists=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.workbench.menu.crud.MenuManageableService.update=PROPAGATION_REQUIRED
                com.jrsystems.jrbase.workbench.menu.crud.MenuManageableService.delete=PROPAGATION_REQUIRED
            </value>
        </property>
    </bean>

     <!-- IndividualManageableDao Entity Proxy -->
     <bean id="IndividualManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="IndividualManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.individual.crud.IndividualManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- IndividualManageableDao Implementation  -->
    <bean id="IndividualManageableDaoBase" class="com.jrsystems.jrbase.individual.crud.IndividualManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="individualDao"/></property>
        <property name="nextOfKinDao"><ref bean="individualDao"/></property>
        <property name="individualDao"><ref bean="individualDao"/></property>
        <property name="countryOfBirthDao"><ref bean="locationDao"/></property>
        <property name="countryOfCitizenshipDao"><ref bean="locationDao"/></property>
    </bean>

    <!-- IndividualManageableService Service Implementation  -->
    <bean id="IndividualManageableServiceBase" class="com.jrsystems.jrbase.individual.crud.IndividualManageableServiceBase">
        <property name="dao"><ref local="IndividualManageableDao"/></property>
    </bean>

    <!-- IndividualManageableService Service Proxy  -->
    <bean id="IndividualManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="IndividualManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.individual.crud.IndividualManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

     <!-- UserManageableDao Entity Proxy -->
     <bean id="UserManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="UserManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.user.crud.UserManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- UserManageableDao Implementation  -->
    <bean id="UserManageableDaoBase" class="com.jrsystems.jrbase.user.crud.UserManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="userDao"/></property>
        <property name="individualDao"><ref bean="individualDao"/></property>
        <property name="menusDao"><ref bean="menuDao"/></property>
        <property name="programsDao"><ref bean="programDao"/></property>
        <property name="userLocationsDao"><ref bean="userLocationDao"/></property>
        <property name="userRolesDao"><ref bean="roleDao"/></property>
        <property name="userClearanceLevelsDao"><ref bean="clearanceLevelDao"/></property>
        <property name="loginSessionsDao"><ref bean="loginSessionDao"/></property>
    </bean>

    <!-- UserManageableService Service Implementation  -->
    <bean id="UserManageableServiceBase" class="com.jrsystems.jrbase.user.crud.UserManageableServiceBase">
        <property name="dao"><ref local="UserManageableDao"/></property>
    </bean>

    <!-- UserManageableService Service Proxy  -->
    <bean id="UserManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="UserManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.user.crud.UserManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

     <!-- UserLocationManageableDao Entity Proxy -->
     <bean id="UserLocationManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="UserLocationManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.user.crud.UserLocationManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- UserLocationManageableDao Implementation  -->
    <bean id="UserLocationManageableDaoBase" class="com.jrsystems.jrbase.user.crud.UserLocationManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="userLocationDao"/></property>
        <property name="userDao"><ref bean="userDao"/></property>
        <property name="locationDao"><ref bean="locationDao"/></property>
    </bean>

    <!-- UserLocationManageableService Service Implementation  -->
    <bean id="UserLocationManageableServiceBase" class="com.jrsystems.jrbase.user.crud.UserLocationManageableServiceBase">
        <property name="dao"><ref local="UserLocationManageableDao"/></property>
    </bean>

    <!-- UserLocationManageableService Service Proxy  -->
    <bean id="UserLocationManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="UserLocationManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.user.crud.UserLocationManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

     <!-- OrganisationManageableDao Entity Proxy -->
     <bean id="OrganisationManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="OrganisationManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.organisation.crud.OrganisationManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- OrganisationManageableDao Implementation  -->
    <bean id="OrganisationManageableDaoBase" class="com.jrsystems.jrbase.organisation.crud.OrganisationManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="organisationDao"/></property>
        <property name="organisationDao"><ref bean="organisationDao"/></property>
        <property name="organisationsDao"><ref bean="organisationDao"/></property>
        <property name="organisationTypeDao"><ref bean="organisationTypeDao"/></property>
        <property name="organisationLocationsDao"><ref bean="locationDao"/></property>
    </bean>

    <!-- OrganisationManageableService Service Implementation  -->
    <bean id="OrganisationManageableServiceBase" class="com.jrsystems.jrbase.organisation.crud.OrganisationManageableServiceBase">
        <property name="dao"><ref local="OrganisationManageableDao"/></property>
    </bean>

    <!-- OrganisationManageableService Service Proxy  -->
    <bean id="OrganisationManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="OrganisationManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.organisation.crud.OrganisationManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

     <!-- OrganisationTypeManageableDao Entity Proxy -->
     <bean id="OrganisationTypeManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="OrganisationTypeManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- OrganisationTypeManageableDao Implementation  -->
    <bean id="OrganisationTypeManageableDaoBase" class="com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="organisationTypeDao"/></property>
        <property name="organisationsDao"><ref bean="organisationDao"/></property>
    </bean>

    <!-- OrganisationTypeManageableService Service Implementation  -->
    <bean id="OrganisationTypeManageableServiceBase" class="com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableServiceBase">
        <property name="dao"><ref local="OrganisationTypeManageableDao"/></property>
    </bean>

    <!-- OrganisationTypeManageableService Service Proxy  -->
    <bean id="OrganisationTypeManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="OrganisationTypeManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

     <!-- LocationTypeManageableDao Entity Proxy -->
     <bean id="LocationTypeManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="LocationTypeManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.location.crud.LocationTypeManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- LocationTypeManageableDao Implementation  -->
    <bean id="LocationTypeManageableDaoBase" class="com.jrsystems.jrbase.location.crud.LocationTypeManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="locationTypeDao"/></property>
        <property name="fallsWithinLocationTypeDao"><ref bean="locationTypeDao"/></property>
        <property name="locationTypesDao"><ref bean="locationTypeDao"/></property>
        <property name="locationsDao"><ref bean="locationDao"/></property>
    </bean>

    <!-- LocationTypeManageableService Service Implementation  -->
    <bean id="LocationTypeManageableServiceBase" class="com.jrsystems.jrbase.location.crud.LocationTypeManageableServiceBase">
        <property name="dao"><ref local="LocationTypeManageableDao"/></property>
    </bean>

    <!-- LocationTypeManageableService Service Proxy  -->
    <bean id="LocationTypeManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="LocationTypeManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.location.crud.LocationTypeManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

     <!-- LocationManageableDao Entity Proxy -->
     <bean id="LocationManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="LocationManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.location.crud.LocationManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- LocationManageableDao Implementation  -->
    <bean id="LocationManageableDaoBase" class="com.jrsystems.jrbase.location.crud.LocationManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="locationDao"/></property>
        <property name="individualDao"><ref bean="individualDao"/></property>
        <property name="individualOwnersDao"><ref bean="individualDao"/></property>
        <property name="locationOrganisationsDao"><ref bean="organisationDao"/></property>
        <property name="locationTypeDao"><ref bean="locationTypeDao"/></property>
        <property name="fallsWithinAreaDao"><ref bean="locationDao"/></property>
        <property name="locationsDao"><ref bean="locationDao"/></property>
        <property name="loginSessionsDao"><ref bean="loginSessionDao"/></property>
    </bean>

    <!-- LocationManageableService Service Implementation  -->
    <bean id="LocationManageableServiceBase" class="com.jrsystems.jrbase.location.crud.LocationManageableServiceBase">
        <property name="dao"><ref local="LocationManageableDao"/></property>
    </bean>

    <!-- LocationManageableService Service Proxy  -->
    <bean id="LocationManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="LocationManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.location.crud.LocationManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

     <!-- CounterManageableDao Entity Proxy -->
     <bean id="CounterManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="CounterManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.counter.crud.CounterManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- CounterManageableDao Implementation  -->
    <bean id="CounterManageableDaoBase" class="com.jrsystems.jrbase.counter.crud.CounterManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="counterDao"/></property>
    </bean>

    <!-- CounterManageableService Service Implementation  -->
    <bean id="CounterManageableServiceBase" class="com.jrsystems.jrbase.counter.crud.CounterManageableServiceBase">
        <property name="dao"><ref local="CounterManageableDao"/></property>
    </bean>

    <!-- CounterManageableService Service Proxy  -->
    <bean id="CounterManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="CounterManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.counter.crud.CounterManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

     <!-- RoleManageableDao Entity Proxy -->
     <bean id="RoleManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="RoleManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.role.crud.RoleManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- RoleManageableDao Implementation  -->
    <bean id="RoleManageableDaoBase" class="com.jrsystems.jrbase.role.crud.RoleManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="roleDao"/></property>
        <property name="usersDao"><ref bean="userDao"/></property>
        <property name="menusDao"><ref bean="menuDao"/></property>
        <property name="programsDao"><ref bean="programDao"/></property>
        <property name="roleClearanceLevelsDao"><ref bean="clearanceLevelDao"/></property>
    </bean>

    <!-- RoleManageableService Service Implementation  -->
    <bean id="RoleManageableServiceBase" class="com.jrsystems.jrbase.role.crud.RoleManageableServiceBase">
        <property name="dao"><ref local="RoleManageableDao"/></property>
    </bean>

    <!-- RoleManageableService Service Proxy  -->
    <bean id="RoleManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="RoleManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.role.crud.RoleManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

     <!-- ClearanceLevelManageableDao Entity Proxy -->
     <bean id="ClearanceLevelManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="ClearanceLevelManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- ClearanceLevelManageableDao Implementation  -->
    <bean id="ClearanceLevelManageableDaoBase" class="com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="clearanceLevelDao"/></property>
        <property name="clearedUsersDao"><ref bean="userDao"/></property>
        <property name="clearedRolesDao"><ref bean="roleDao"/></property>
        <property name="lowerLevelDao"><ref bean="clearanceLevelDao"/></property>
        <property name="upperLevelDao"><ref bean="clearanceLevelDao"/></property>
    </bean>

    <!-- ClearanceLevelManageableService Service Implementation  -->
    <bean id="ClearanceLevelManageableServiceBase" class="com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableServiceBase">
        <property name="dao"><ref local="ClearanceLevelManageableDao"/></property>
    </bean>

    <!-- ClearanceLevelManageableService Service Proxy  -->
    <bean id="ClearanceLevelManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="ClearanceLevelManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

     <!-- LoginSessionManageableDao Entity Proxy -->
     <bean id="LoginSessionManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="LoginSessionManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- LoginSessionManageableDao Implementation  -->
    <bean id="LoginSessionManageableDaoBase" class="com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="loginSessionDao"/></property>
        <property name="userDao"><ref bean="userDao"/></property>
        <property name="areaDao"><ref bean="locationDao"/></property>
    </bean>

    <!-- LoginSessionManageableService Service Implementation  -->
    <bean id="LoginSessionManageableServiceBase" class="com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableServiceBase">
        <property name="dao"><ref local="LoginSessionManageableDao"/></property>
    </bean>

    <!-- LoginSessionManageableService Service Proxy  -->
    <bean id="LoginSessionManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="LoginSessionManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

     <!-- ProgramManageableDao Entity Proxy -->
     <bean id="ProgramManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="ProgramManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.workbench.program.crud.ProgramManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- ProgramManageableDao Implementation  -->
    <bean id="ProgramManageableDaoBase" class="com.jrsystems.jrbase.workbench.program.crud.ProgramManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="programDao"/></property>
        <property name="menuDao"><ref bean="menuDao"/></property>
    </bean>

    <!-- ProgramManageableService Service Implementation  -->
    <bean id="ProgramManageableServiceBase" class="com.jrsystems.jrbase.workbench.program.crud.ProgramManageableServiceBase">
        <property name="dao"><ref local="ProgramManageableDao"/></property>
    </bean>

    <!-- ProgramManageableService Service Proxy  -->
    <bean id="ProgramManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="ProgramManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.workbench.program.crud.ProgramManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

     <!-- MenuManageableDao Entity Proxy -->
     <bean id="MenuManageableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="MenuManageableDaoBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.workbench.menu.crud.MenuManageableDao</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

    <!-- MenuManageableDao Implementation  -->
    <bean id="MenuManageableDaoBase" class="com.jrsystems.jrbase.workbench.menu.crud.MenuManageableDaoBase">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
        <property name="dao"><ref bean="menuDao"/></property>
        <property name="programsDao"><ref bean="programDao"/></property>
    </bean>

    <!-- MenuManageableService Service Implementation  -->
    <bean id="MenuManageableServiceBase" class="com.jrsystems.jrbase.workbench.menu.crud.MenuManageableServiceBase">
        <property name="dao"><ref local="MenuManageableDao"/></property>
    </bean>

    <!-- MenuManageableService Service Proxy  -->
    <bean id="MenuManageableService" class="org.springframework.aop.framework.ProxyFactoryBean">
         <property name="target"><ref local="MenuManageableServiceBase"/></property>
         <property name="proxyInterfaces">
             <value>com.jrsystems.jrbase.workbench.menu.crud.MenuManageableService</value>
         </property>
         <property name="interceptorNames">
             <list>
                 <value>hibernateInterceptor</value>
             </list>
         </property>
     </bean>

</beans>