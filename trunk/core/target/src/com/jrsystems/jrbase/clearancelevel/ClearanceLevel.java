// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.jrsystems.jrbase.clearancelevel;

/**
 * 
 */
public abstract class ClearanceLevel
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 2808619948288448994L;

    private java.lang.String levelCode;

    /**
     * 
     */
    public java.lang.String getLevelCode()
    {
        return this.levelCode;
    }

    public void setLevelCode(java.lang.String levelCode)
    {
        this.levelCode = levelCode;
    }

    private java.lang.String levelDescription;

    /**
     * 
     */
    public java.lang.String getLevelDescription()
    {
        return this.levelDescription;
    }

    public void setLevelDescription(java.lang.String levelDescription)
    {
        this.levelDescription = levelDescription;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private java.util.Collection clearedUsers = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getClearedUsers()
    {
        return this.clearedUsers;
    }

    public void setClearedUsers(java.util.Collection clearedUsers)
    {
        this.clearedUsers = clearedUsers;
    }

    private java.util.Collection clearedRoles = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getClearedRoles()
    {
        return this.clearedRoles;
    }

    public void setClearedRoles(java.util.Collection clearedRoles)
    {
        this.clearedRoles = clearedRoles;
    }

    private com.jrsystems.jrbase.clearancelevel.ClearanceLevel lowerLevel;

    /**
     * 
     */
    public com.jrsystems.jrbase.clearancelevel.ClearanceLevel getLowerLevel()
    {
        return this.lowerLevel;
    }

    public void setLowerLevel(com.jrsystems.jrbase.clearancelevel.ClearanceLevel lowerLevel)
    {
        this.lowerLevel = lowerLevel;
    }

    private com.jrsystems.jrbase.clearancelevel.ClearanceLevel upperLevel;

    /**
     * 
     */
    public com.jrsystems.jrbase.clearancelevel.ClearanceLevel getUpperLevel()
    {
        return this.upperLevel;
    }

    public void setUpperLevel(com.jrsystems.jrbase.clearancelevel.ClearanceLevel upperLevel)
    {
        this.upperLevel = upperLevel;
    }

    /**
     * Returns <code>true</code> if the argument is an ClearanceLevel instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof ClearanceLevel))
        {
            return false;
        }
        final ClearanceLevel that = (ClearanceLevel)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link com.jrsystems.jrbase.clearancelevel.ClearanceLevel}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.clearancelevel.ClearanceLevel}.
         */
        public static com.jrsystems.jrbase.clearancelevel.ClearanceLevel newInstance()
        {
            return new com.jrsystems.jrbase.clearancelevel.ClearanceLevelImpl();
        }

        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.clearancelevel.ClearanceLevel}, taking all required and/or
         * read-only properties as arguments.
         */
        public static com.jrsystems.jrbase.clearancelevel.ClearanceLevel newInstance(java.lang.String levelCode, java.lang.String levelDescription)
        {
            final com.jrsystems.jrbase.clearancelevel.ClearanceLevel entity = new com.jrsystems.jrbase.clearancelevel.ClearanceLevelImpl();
            entity.setLevelCode(levelCode);
            entity.setLevelDescription(levelDescription);
            return entity;
        }

        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.clearancelevel.ClearanceLevel}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static com.jrsystems.jrbase.clearancelevel.ClearanceLevel newInstance(java.lang.String levelCode, java.lang.String levelDescription, java.util.Collection clearedUsers, java.util.Collection clearedRoles, com.jrsystems.jrbase.clearancelevel.ClearanceLevel lowerLevel, com.jrsystems.jrbase.clearancelevel.ClearanceLevel upperLevel)
        {
            final com.jrsystems.jrbase.clearancelevel.ClearanceLevel entity = new com.jrsystems.jrbase.clearancelevel.ClearanceLevelImpl();
            entity.setLevelCode(levelCode);
            entity.setLevelDescription(levelDescription);
            entity.setClearedUsers(clearedUsers);
            entity.setClearedRoles(clearedRoles);
            entity.setLowerLevel(lowerLevel);
            entity.setUpperLevel(upperLevel);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}