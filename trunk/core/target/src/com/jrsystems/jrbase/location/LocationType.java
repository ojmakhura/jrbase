// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.jrsystems.jrbase.location;

/**
 * 
 */
public abstract class LocationType
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 2334508864292276326L;

    private java.lang.String levelCode;

    /**
     * 
     */
    public java.lang.String getLevelCode()
    {
        return this.levelCode;
    }

    public void setLevelCode(java.lang.String levelCode)
    {
        this.levelCode = levelCode;
    }

    private java.lang.String name;

    /**
     * 
     */
    public java.lang.String getName()
    {
        return this.name;
    }

    public void setName(java.lang.String name)
    {
        this.name = name;
    }

    private java.lang.String description;

    /**
     * 
     */
    public java.lang.String getDescription()
    {
        return this.description;
    }

    public void setDescription(java.lang.String description)
    {
        this.description = description;
    }

    private com.jrsystems.jrbase.location.LocationStatus status;

    /**
     * 
     */
    public com.jrsystems.jrbase.location.LocationStatus getStatus()
    {
        return this.status;
    }

    public void setStatus(com.jrsystems.jrbase.location.LocationStatus status)
    {
        this.status = status;
    }

    private com.jrsystems.jrbase.location.Type type;

    /**
     * 
     */
    public com.jrsystems.jrbase.location.Type getType()
    {
        return this.type;
    }

    public void setType(com.jrsystems.jrbase.location.Type type)
    {
        this.type = type;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private com.jrsystems.jrbase.location.LocationType fallsWithinLocationType;

    /**
     * 
     */
    public com.jrsystems.jrbase.location.LocationType getFallsWithinLocationType()
    {
        return this.fallsWithinLocationType;
    }

    public void setFallsWithinLocationType(com.jrsystems.jrbase.location.LocationType fallsWithinLocationType)
    {
        this.fallsWithinLocationType = fallsWithinLocationType;
    }

    private java.util.Collection locationTypes = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getLocationTypes()
    {
        return this.locationTypes;
    }

    public void setLocationTypes(java.util.Collection locationTypes)
    {
        this.locationTypes = locationTypes;
    }

    private java.util.Collection locations = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getLocations()
    {
        return this.locations;
    }

    public void setLocations(java.util.Collection locations)
    {
        this.locations = locations;
    }

    /**
     * Returns <code>true</code> if the argument is an LocationType instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof LocationType))
        {
            return false;
        }
        final LocationType that = (LocationType)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link com.jrsystems.jrbase.location.LocationType}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.location.LocationType}.
         */
        public static com.jrsystems.jrbase.location.LocationType newInstance()
        {
            return new com.jrsystems.jrbase.location.LocationTypeImpl();
        }

        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.location.LocationType}, taking all required and/or
         * read-only properties as arguments.
         */
        public static com.jrsystems.jrbase.location.LocationType newInstance(java.lang.String levelCode, java.lang.String name, com.jrsystems.jrbase.location.LocationStatus status, com.jrsystems.jrbase.location.Type type)
        {
            final com.jrsystems.jrbase.location.LocationType entity = new com.jrsystems.jrbase.location.LocationTypeImpl();
            entity.setLevelCode(levelCode);
            entity.setName(name);
            entity.setStatus(status);
            entity.setType(type);
            return entity;
        }

        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.location.LocationType}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static com.jrsystems.jrbase.location.LocationType newInstance(java.lang.String levelCode, java.lang.String name, java.lang.String description, com.jrsystems.jrbase.location.LocationStatus status, com.jrsystems.jrbase.location.Type type, com.jrsystems.jrbase.location.LocationType fallsWithinLocationType, java.util.Collection locationTypes, java.util.Collection locations)
        {
            final com.jrsystems.jrbase.location.LocationType entity = new com.jrsystems.jrbase.location.LocationTypeImpl();
            entity.setLevelCode(levelCode);
            entity.setName(name);
            entity.setDescription(description);
            entity.setStatus(status);
            entity.setType(type);
            entity.setFallsWithinLocationType(fallsWithinLocationType);
            entity.setLocationTypes(locationTypes);
            entity.setLocations(locations);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}