// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.jrsystems.jrbase.location;

/**
 * 
 */
public abstract class Location
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -5012061129237993097L;

    private com.jrsystems.jrbase.location.LocationStatus status;

    /**
     * 
     */
    public com.jrsystems.jrbase.location.LocationStatus getStatus()
    {
        return this.status;
    }

    public void setStatus(com.jrsystems.jrbase.location.LocationStatus status)
    {
        this.status = status;
    }

    private com.jrsystems.jrbase.location.Type type;

    /**
     * 
     */
    public com.jrsystems.jrbase.location.Type getType()
    {
        return this.type;
    }

    public void setType(com.jrsystems.jrbase.location.Type type)
    {
        this.type = type;
    }

    private java.lang.String uniqueCode;

    /**
     * 
     */
    public java.lang.String getUniqueCode()
    {
        return this.uniqueCode;
    }

    public void setUniqueCode(java.lang.String uniqueCode)
    {
        this.uniqueCode = uniqueCode;
    }

    private java.lang.String levelCode;

    /**
     * 
     */
    public java.lang.String getLevelCode()
    {
        return this.levelCode;
    }

    public void setLevelCode(java.lang.String levelCode)
    {
        this.levelCode = levelCode;
    }

    private java.lang.String locationName;

    /**
     * 
     */
    public java.lang.String getLocationName()
    {
        return this.locationName;
    }

    public void setLocationName(java.lang.String locationName)
    {
        this.locationName = locationName;
    }

    private java.lang.String description;

    /**
     * 
     */
    public java.lang.String getDescription()
    {
        return this.description;
    }

    public void setDescription(java.lang.String description)
    {
        this.description = description;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private com.jrsystems.jrbase.individual.Individual individual;

    /**
     * 
     */
    public com.jrsystems.jrbase.individual.Individual getIndividual()
    {
        return this.individual;
    }

    public void setIndividual(com.jrsystems.jrbase.individual.Individual individual)
    {
        this.individual = individual;
    }

    private java.util.Collection individualOwners = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getIndividualOwners()
    {
        return this.individualOwners;
    }

    public void setIndividualOwners(java.util.Collection individualOwners)
    {
        this.individualOwners = individualOwners;
    }

    private java.util.Collection locationOrganisations = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getLocationOrganisations()
    {
        return this.locationOrganisations;
    }

    public void setLocationOrganisations(java.util.Collection locationOrganisations)
    {
        this.locationOrganisations = locationOrganisations;
    }

    private com.jrsystems.jrbase.location.LocationType locationType;

    /**
     * 
     */
    public com.jrsystems.jrbase.location.LocationType getLocationType()
    {
        return this.locationType;
    }

    public void setLocationType(com.jrsystems.jrbase.location.LocationType locationType)
    {
        this.locationType = locationType;
    }

    private com.jrsystems.jrbase.location.Location fallsWithinArea;

    /**
     * 
     */
    public com.jrsystems.jrbase.location.Location getFallsWithinArea()
    {
        return this.fallsWithinArea;
    }

    public void setFallsWithinArea(com.jrsystems.jrbase.location.Location fallsWithinArea)
    {
        this.fallsWithinArea = fallsWithinArea;
    }

    private java.util.Collection locations = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getLocations()
    {
        return this.locations;
    }

    public void setLocations(java.util.Collection locations)
    {
        this.locations = locations;
    }

    private java.util.Collection loginSessions = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getLoginSessions()
    {
        return this.loginSessions;
    }

    public void setLoginSessions(java.util.Collection loginSessions)
    {
        this.loginSessions = loginSessions;
    }

    /**
     * Returns <code>true</code> if the argument is an Location instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof Location))
        {
            return false;
        }
        final Location that = (Location)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link com.jrsystems.jrbase.location.Location}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.location.Location}.
         */
        public static com.jrsystems.jrbase.location.Location newInstance()
        {
            return new com.jrsystems.jrbase.location.LocationImpl();
        }

        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.location.Location}, taking all required and/or
         * read-only properties as arguments.
         */
        public static com.jrsystems.jrbase.location.Location newInstance(com.jrsystems.jrbase.location.LocationStatus status, com.jrsystems.jrbase.location.Type type, java.lang.String uniqueCode, java.lang.String levelCode, java.lang.String locationName, com.jrsystems.jrbase.individual.Individual individual, com.jrsystems.jrbase.location.LocationType locationType)
        {
            final com.jrsystems.jrbase.location.Location entity = new com.jrsystems.jrbase.location.LocationImpl();
            entity.setStatus(status);
            entity.setType(type);
            entity.setUniqueCode(uniqueCode);
            entity.setLevelCode(levelCode);
            entity.setLocationName(locationName);
            entity.setIndividual(individual);
            entity.setLocationType(locationType);
            return entity;
        }

        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.location.Location}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static com.jrsystems.jrbase.location.Location newInstance(com.jrsystems.jrbase.location.LocationStatus status, com.jrsystems.jrbase.location.Type type, java.lang.String uniqueCode, java.lang.String levelCode, java.lang.String locationName, java.lang.String description, com.jrsystems.jrbase.individual.Individual individual, java.util.Collection individualOwners, java.util.Collection locationOrganisations, com.jrsystems.jrbase.location.LocationType locationType, com.jrsystems.jrbase.location.Location fallsWithinArea, java.util.Collection locations, java.util.Collection loginSessions)
        {
            final com.jrsystems.jrbase.location.Location entity = new com.jrsystems.jrbase.location.LocationImpl();
            entity.setStatus(status);
            entity.setType(type);
            entity.setUniqueCode(uniqueCode);
            entity.setLevelCode(levelCode);
            entity.setLocationName(locationName);
            entity.setDescription(description);
            entity.setIndividual(individual);
            entity.setIndividualOwners(individualOwners);
            entity.setLocationOrganisations(locationOrganisations);
            entity.setLocationType(locationType);
            entity.setFallsWithinArea(fallsWithinArea);
            entity.setLocations(locations);
            entity.setLoginSessions(loginSessions);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}