// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.jrsystems.jrbase.individual;

/**
 * 
 */
public abstract class Individual
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -1133477332824330480L;

    private java.lang.String individualId;

    /**
     * 
     */
    public java.lang.String getIndividualId()
    {
        return this.individualId;
    }

    public void setIndividualId(java.lang.String individualId)
    {
        this.individualId = individualId;
    }

    private java.lang.String idNumber;

    /**
     * 
     */
    public java.lang.String getIdNumber()
    {
        return this.idNumber;
    }

    public void setIdNumber(java.lang.String idNumber)
    {
        this.idNumber = idNumber;
    }

    private com.jrsystems.jrbase.individual.Salutation salutation;

    /**
     * 
     */
    public com.jrsystems.jrbase.individual.Salutation getSalutation()
    {
        return this.salutation;
    }

    public void setSalutation(com.jrsystems.jrbase.individual.Salutation salutation)
    {
        this.salutation = salutation;
    }

    private java.lang.String surname;

    /**
     * 
     */
    public java.lang.String getSurname()
    {
        return this.surname;
    }

    public void setSurname(java.lang.String surname)
    {
        this.surname = surname;
    }

    private java.lang.String firstName;

    /**
     * 
     */
    public java.lang.String getFirstName()
    {
        return this.firstName;
    }

    public void setFirstName(java.lang.String firstName)
    {
        this.firstName = firstName;
    }

    private java.lang.String middleNames;

    /**
     * 
     */
    public java.lang.String getMiddleNames()
    {
        return this.middleNames;
    }

    public void setMiddleNames(java.lang.String middleNames)
    {
        this.middleNames = middleNames;
    }

    private com.jrsystems.jrbase.individual.Gender sex;

    /**
     * 
     */
    public com.jrsystems.jrbase.individual.Gender getSex()
    {
        return this.sex;
    }

    public void setSex(com.jrsystems.jrbase.individual.Gender sex)
    {
        this.sex = sex;
    }

    private java.lang.String postalAddress;

    /**
     * 
     */
    public java.lang.String getPostalAddress()
    {
        return this.postalAddress;
    }

    public void setPostalAddress(java.lang.String postalAddress)
    {
        this.postalAddress = postalAddress;
    }

    private java.lang.String physicalAddress;

    /**
     * 
     */
    public java.lang.String getPhysicalAddress()
    {
        return this.physicalAddress;
    }

    public void setPhysicalAddress(java.lang.String physicalAddress)
    {
        this.physicalAddress = physicalAddress;
    }

    private java.lang.String email;

    /**
     * 
     */
    public java.lang.String getEmail()
    {
        return this.email;
    }

    public void setEmail(java.lang.String email)
    {
        this.email = email;
    }

    private java.util.Date dob;

    /**
     * 
     */
    public java.util.Date getDob()
    {
        return this.dob;
    }

    public void setDob(java.util.Date dob)
    {
        this.dob = dob;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private java.util.Collection nextOfKin = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getNextOfKin()
    {
        return this.nextOfKin;
    }

    public void setNextOfKin(java.util.Collection nextOfKin)
    {
        this.nextOfKin = nextOfKin;
    }

    private com.jrsystems.jrbase.individual.Individual individual;

    /**
     * 
     */
    public com.jrsystems.jrbase.individual.Individual getIndividual()
    {
        return this.individual;
    }

    public void setIndividual(com.jrsystems.jrbase.individual.Individual individual)
    {
        this.individual = individual;
    }

    private com.jrsystems.jrbase.location.Location countryOfBirth;

    /**
     * 
     */
    public com.jrsystems.jrbase.location.Location getCountryOfBirth()
    {
        return this.countryOfBirth;
    }

    public void setCountryOfBirth(com.jrsystems.jrbase.location.Location countryOfBirth)
    {
        this.countryOfBirth = countryOfBirth;
    }

    private com.jrsystems.jrbase.location.Location countryOfCitizenship;

    /**
     * 
     */
    public com.jrsystems.jrbase.location.Location getCountryOfCitizenship()
    {
        return this.countryOfCitizenship;
    }

    public void setCountryOfCitizenship(com.jrsystems.jrbase.location.Location countryOfCitizenship)
    {
        this.countryOfCitizenship = countryOfCitizenship;
    }

    /**
     * Returns <code>true</code> if the argument is an Individual instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof Individual))
        {
            return false;
        }
        final Individual that = (Individual)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link com.jrsystems.jrbase.individual.Individual}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.individual.Individual}.
         */
        public static com.jrsystems.jrbase.individual.Individual newInstance()
        {
            return new com.jrsystems.jrbase.individual.IndividualImpl();
        }

        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.individual.Individual}, taking all required and/or
         * read-only properties as arguments.
         */
        public static com.jrsystems.jrbase.individual.Individual newInstance(java.lang.String individualId, java.lang.String idNumber, com.jrsystems.jrbase.individual.Salutation salutation, java.lang.String surname, java.lang.String firstName, com.jrsystems.jrbase.individual.Gender sex, java.lang.String postalAddress, java.lang.String physicalAddress, java.util.Date dob, com.jrsystems.jrbase.location.Location countryOfBirth, com.jrsystems.jrbase.location.Location countryOfCitizenship)
        {
            final com.jrsystems.jrbase.individual.Individual entity = new com.jrsystems.jrbase.individual.IndividualImpl();
            entity.setIndividualId(individualId);
            entity.setIdNumber(idNumber);
            entity.setSalutation(salutation);
            entity.setSurname(surname);
            entity.setFirstName(firstName);
            entity.setSex(sex);
            entity.setPostalAddress(postalAddress);
            entity.setPhysicalAddress(physicalAddress);
            entity.setDob(dob);
            entity.setCountryOfBirth(countryOfBirth);
            entity.setCountryOfCitizenship(countryOfCitizenship);
            return entity;
        }

        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.individual.Individual}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static com.jrsystems.jrbase.individual.Individual newInstance(java.lang.String individualId, java.lang.String idNumber, com.jrsystems.jrbase.individual.Salutation salutation, java.lang.String surname, java.lang.String firstName, java.lang.String middleNames, com.jrsystems.jrbase.individual.Gender sex, java.lang.String postalAddress, java.lang.String physicalAddress, java.lang.String email, java.util.Date dob, java.util.Collection nextOfKin, com.jrsystems.jrbase.individual.Individual individual, com.jrsystems.jrbase.location.Location countryOfBirth, com.jrsystems.jrbase.location.Location countryOfCitizenship)
        {
            final com.jrsystems.jrbase.individual.Individual entity = new com.jrsystems.jrbase.individual.IndividualImpl();
            entity.setIndividualId(individualId);
            entity.setIdNumber(idNumber);
            entity.setSalutation(salutation);
            entity.setSurname(surname);
            entity.setFirstName(firstName);
            entity.setMiddleNames(middleNames);
            entity.setSex(sex);
            entity.setPostalAddress(postalAddress);
            entity.setPhysicalAddress(physicalAddress);
            entity.setEmail(email);
            entity.setDob(dob);
            entity.setNextOfKin(nextOfKin);
            entity.setIndividual(individual);
            entity.setCountryOfBirth(countryOfBirth);
            entity.setCountryOfCitizenship(countryOfCitizenship);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}