// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.jrsystems.jrbase.loginsession;

/**
 * 
 */
public abstract class LoginSession
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -2332754714215066032L;

    private boolean active = true;

    /**
     * 
     */
    public boolean isActive()
    {
        return this.active;
    }

    public void setActive(boolean active)
    {
        this.active = active;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private com.jrsystems.jrbase.user.User user;

    /**
     * 
     */
    public com.jrsystems.jrbase.user.User getUser()
    {
        return this.user;
    }

    public void setUser(com.jrsystems.jrbase.user.User user)
    {
        this.user = user;
    }

    private com.jrsystems.jrbase.location.Location area;

    /**
     * 
     */
    public com.jrsystems.jrbase.location.Location getArea()
    {
        return this.area;
    }

    public void setArea(com.jrsystems.jrbase.location.Location area)
    {
        this.area = area;
    }

    /**
     * Returns <code>true</code> if the argument is an LoginSession instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof LoginSession))
        {
            return false;
        }
        final LoginSession that = (LoginSession)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link com.jrsystems.jrbase.loginsession.LoginSession}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.loginsession.LoginSession}.
         */
        public static com.jrsystems.jrbase.loginsession.LoginSession newInstance()
        {
            return new com.jrsystems.jrbase.loginsession.LoginSessionImpl();
        }


        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.loginsession.LoginSession}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static com.jrsystems.jrbase.loginsession.LoginSession newInstance(boolean active, com.jrsystems.jrbase.user.User user, com.jrsystems.jrbase.location.Location area)
        {
            final com.jrsystems.jrbase.loginsession.LoginSession entity = new com.jrsystems.jrbase.loginsession.LoginSessionImpl();
            entity.setActive(active);
            entity.setUser(user);
            entity.setArea(area);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}