// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.jrsystems.jrbase.user;

/**
 * 
 */
public abstract class UserLocation
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 6233104155069188327L;

    private com.jrsystems.jrbase.user.UserLocationStatus status;

    /**
     * 
     */
    public com.jrsystems.jrbase.user.UserLocationStatus getStatus()
    {
        return this.status;
    }

    public void setStatus(com.jrsystems.jrbase.user.UserLocationStatus status)
    {
        this.status = status;
    }

    private java.sql.Timestamp fromDate;

    /**
     * 
     */
    public java.sql.Timestamp getFromDate()
    {
        return this.fromDate;
    }

    public void setFromDate(java.sql.Timestamp fromDate)
    {
        this.fromDate = fromDate;
    }

    private java.sql.Timestamp toDate;

    /**
     * 
     */
    public java.sql.Timestamp getToDate()
    {
        return this.toDate;
    }

    public void setToDate(java.sql.Timestamp toDate)
    {
        this.toDate = toDate;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private com.jrsystems.jrbase.user.User user;

    /**
     * 
     */
    public com.jrsystems.jrbase.user.User getUser()
    {
        return this.user;
    }

    public void setUser(com.jrsystems.jrbase.user.User user)
    {
        this.user = user;
    }

    private com.jrsystems.jrbase.location.Location location;

    /**
     * 
     */
    public com.jrsystems.jrbase.location.Location getLocation()
    {
        return this.location;
    }

    public void setLocation(com.jrsystems.jrbase.location.Location location)
    {
        this.location = location;
    }

    /**
     * Returns <code>true</code> if the argument is an UserLocation instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof UserLocation))
        {
            return false;
        }
        final UserLocation that = (UserLocation)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link com.jrsystems.jrbase.user.UserLocation}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.user.UserLocation}.
         */
        public static com.jrsystems.jrbase.user.UserLocation newInstance()
        {
            return new com.jrsystems.jrbase.user.UserLocationImpl();
        }

        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.user.UserLocation}, taking all required and/or
         * read-only properties as arguments.
         */
        public static com.jrsystems.jrbase.user.UserLocation newInstance(com.jrsystems.jrbase.user.UserLocationStatus status, com.jrsystems.jrbase.user.User user, com.jrsystems.jrbase.location.Location location)
        {
            final com.jrsystems.jrbase.user.UserLocation entity = new com.jrsystems.jrbase.user.UserLocationImpl();
            entity.setStatus(status);
            entity.setUser(user);
            entity.setLocation(location);
            return entity;
        }

        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.user.UserLocation}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static com.jrsystems.jrbase.user.UserLocation newInstance(com.jrsystems.jrbase.user.UserLocationStatus status, java.sql.Timestamp fromDate, java.sql.Timestamp toDate, com.jrsystems.jrbase.user.User user, com.jrsystems.jrbase.location.Location location)
        {
            final com.jrsystems.jrbase.user.UserLocation entity = new com.jrsystems.jrbase.user.UserLocationImpl();
            entity.setStatus(status);
            entity.setFromDate(fromDate);
            entity.setToDate(toDate);
            entity.setUser(user);
            entity.setLocation(location);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}