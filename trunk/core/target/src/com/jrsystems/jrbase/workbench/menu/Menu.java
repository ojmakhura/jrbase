// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.jrsystems.jrbase.workbench.menu;

/**
 * 
 */
public abstract class Menu
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 4507011225667494887L;

    private java.lang.String menuCode;

    /**
     * 
     */
    public java.lang.String getMenuCode()
    {
        return this.menuCode;
    }

    public void setMenuCode(java.lang.String menuCode)
    {
        this.menuCode = menuCode;
    }

    private java.lang.String menuName;

    /**
     * 
     */
    public java.lang.String getMenuName()
    {
        return this.menuName;
    }

    public void setMenuName(java.lang.String menuName)
    {
        this.menuName = menuName;
    }

    private java.lang.String menuDescription;

    /**
     * 
     */
    public java.lang.String getMenuDescription()
    {
        return this.menuDescription;
    }

    public void setMenuDescription(java.lang.String menuDescription)
    {
        this.menuDescription = menuDescription;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private java.util.Collection programs = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getPrograms()
    {
        return this.programs;
    }

    public void setPrograms(java.util.Collection programs)
    {
        this.programs = programs;
    }

    /**
     * Returns <code>true</code> if the argument is an Menu instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof Menu))
        {
            return false;
        }
        final Menu that = (Menu)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link com.jrsystems.jrbase.workbench.menu.Menu}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.workbench.menu.Menu}.
         */
        public static com.jrsystems.jrbase.workbench.menu.Menu newInstance()
        {
            return new com.jrsystems.jrbase.workbench.menu.MenuImpl();
        }

        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.workbench.menu.Menu}, taking all required and/or
         * read-only properties as arguments.
         */
        public static com.jrsystems.jrbase.workbench.menu.Menu newInstance(java.lang.String menuCode, java.lang.String menuName)
        {
            final com.jrsystems.jrbase.workbench.menu.Menu entity = new com.jrsystems.jrbase.workbench.menu.MenuImpl();
            entity.setMenuCode(menuCode);
            entity.setMenuName(menuName);
            return entity;
        }

        /**
         * Constructs a new instance of {@link com.jrsystems.jrbase.workbench.menu.Menu}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static com.jrsystems.jrbase.workbench.menu.Menu newInstance(java.lang.String menuCode, java.lang.String menuName, java.lang.String menuDescription, java.util.Collection programs)
        {
            final com.jrsystems.jrbase.workbench.menu.Menu entity = new com.jrsystems.jrbase.workbench.menu.MenuImpl();
            entity.setMenuCode(menuCode);
            entity.setMenuName(menuName);
            entity.setMenuDescription(menuDescription);
            entity.setPrograms(programs);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}