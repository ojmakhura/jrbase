// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceLocator.vsl in andromda-spring-cartridge.
//
package com.jrsystems.jrbase;

/**
 * Locates and provides all available application services.
 */
public class ServiceLocator
{

    private ServiceLocator()
    {
        // shouldn't be instantiated
    }

    /**
     * The prefix used for all bean ids.
     */
    public static final String BEAN_PREFIX = "";

    /**
     * The shared instance of this ServiceLocator.
     */
    private final static ServiceLocator instance = new ServiceLocator();

    /**
     * Gets the shared instance of this Class
     *
     * @return the shared service locator instance.
     */
    public static final ServiceLocator instance()
    {
        return instance;
    }

    /**
     * The bean factory reference instance.
     */
    private org.springframework.beans.factory.access.BeanFactoryReference beanFactoryReference;

    /**
     * The bean factory reference location.
     */
    private String beanFactoryReferenceLocation;

    /**
     * The bean factory reference id.
     */
    private String beanRefFactoryReferenceId;

    /**
     * Initializes the Spring application context from
     * the given <code>beanFactoryReferenceLocation</code>.  If <code>null</code>
     * is specified for the <code>beanFactoryReferenceLocation</code>
     * then the default application context will be used.
     *
     * @param beanFactoryReferenceLocation the location of the beanRefFactory reference.
     */
    public synchronized void init(final String beanFactoryReferenceLocation, final String beanRefFactoryReferenceId)
    {
        this.beanFactoryReferenceLocation = beanFactoryReferenceLocation;
        this.beanRefFactoryReferenceId = beanRefFactoryReferenceId;
        this.beanFactoryReference = null;
    }

    /**
     * Initializes the Spring application context from
     * the given <code>beanFactoryReferenceLocation</code>.  If <code>null</code>
     * is specified for the <code>beanFactoryReferenceLocation</code>
     * then the default application context will be used.
     *
     * @param beanFactoryReferenceLocation the location of the beanRefFactory reference.
     */
    public synchronized void init(final String beanFactoryReferenceLocation)
    {
        this.beanFactoryReferenceLocation = beanFactoryReferenceLocation;
        this.beanFactoryReference = null;
    }

    /**
     * The default bean reference factory location.
     */
    private final String DEFAULT_BEAN_REFERENCE_LOCATION = "beanRefFactory.xml";

    /**
     * The default bean reference factory ID.
     */
    private final String DEFAULT_BEAN_REFERENCE_ID = "beanRefFactoryEjb";

    /**
     * Gets the Spring ApplicationContext.
     */
    public synchronized org.springframework.context.ApplicationContext getContext()
    {
        if (this.beanFactoryReference == null)
        {
            if (this.beanFactoryReferenceLocation == null)
            {
                this.beanFactoryReferenceLocation = DEFAULT_BEAN_REFERENCE_LOCATION;
            }
            if (this.beanRefFactoryReferenceId == null)
            {
                this.beanRefFactoryReferenceId = DEFAULT_BEAN_REFERENCE_ID;
            }
            org.springframework.beans.factory.access.BeanFactoryLocator beanFactoryLocator =
                org.springframework.context.access.ContextSingletonBeanFactoryLocator.getInstance(
                    this.beanFactoryReferenceLocation);
            this.beanFactoryReference = beanFactoryLocator.useBeanFactory(this.beanRefFactoryReferenceId);
        }
        return (org.springframework.context.ApplicationContext)this.beanFactoryReference.getFactory();
    }

    /**
     * Shuts down the ServiceLocator and releases any used resources.
     */
    public synchronized void shutdown()
    {
        ((org.springframework.context.support.AbstractApplicationContext)this.getContext()).close();
        if (this.beanFactoryReference != null)
        {
            this.beanFactoryReference.release();
            this.beanFactoryReference = null;
        }
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.individual.service.IndividualService}.
     */
    public final com.jrsystems.jrbase.individual.service.IndividualService getIndividualService()
    {
        return (com.jrsystems.jrbase.individual.service.IndividualService)
            getContext().getBean("individualService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.user.service.UserService}.
     */
    public final com.jrsystems.jrbase.user.service.UserService getUserService()
    {
        return (com.jrsystems.jrbase.user.service.UserService)
            getContext().getBean("userService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.organisation.service.OrganisationService}.
     */
    public final com.jrsystems.jrbase.organisation.service.OrganisationService getOrganisationService()
    {
        return (com.jrsystems.jrbase.organisation.service.OrganisationService)
            getContext().getBean("organisationService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.location.service.LocationService}.
     */
    public final com.jrsystems.jrbase.location.service.LocationService getLocationService()
    {
        return (com.jrsystems.jrbase.location.service.LocationService)
            getContext().getBean("locationService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.counter.service.CounterService}.
     */
    public final com.jrsystems.jrbase.counter.service.CounterService getCounterService()
    {
        return (com.jrsystems.jrbase.counter.service.CounterService)
            getContext().getBean("counterService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.role.service.RoleService}.
     */
    public final com.jrsystems.jrbase.role.service.RoleService getRoleService()
    {
        return (com.jrsystems.jrbase.role.service.RoleService)
            getContext().getBean("roleService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.clearancelevel.service.ClearanceLevelService}.
     */
    public final com.jrsystems.jrbase.clearancelevel.service.ClearanceLevelService getClearanceLevelService()
    {
        return (com.jrsystems.jrbase.clearancelevel.service.ClearanceLevelService)
            getContext().getBean("clearanceLevelService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.loginsession.service.LoginSessionService}.
     */
    public final com.jrsystems.jrbase.loginsession.service.LoginSessionService getLoginSessionService()
    {
        return (com.jrsystems.jrbase.loginsession.service.LoginSessionService)
            getContext().getBean("loginSessionService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.workbench.program.service.ProgramService}.
     */
    public final com.jrsystems.jrbase.workbench.program.service.ProgramService getProgramService()
    {
        return (com.jrsystems.jrbase.workbench.program.service.ProgramService)
            getContext().getBean("programService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.workbench.menu.service.MenuService}.
     */
    public final com.jrsystems.jrbase.workbench.menu.service.MenuService getMenuService()
    {
        return (com.jrsystems.jrbase.workbench.menu.service.MenuService)
            getContext().getBean("menuService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.individual.crud.IndividualManageableService}.
     */
    public final com.jrsystems.jrbase.individual.crud.IndividualManageableService getIndividualManageableService()
    {
        return (com.jrsystems.jrbase.individual.crud.IndividualManageableService)
            getContext().getBean("IndividualManageableService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.user.crud.UserManageableService}.
     */
    public final com.jrsystems.jrbase.user.crud.UserManageableService getUserManageableService()
    {
        return (com.jrsystems.jrbase.user.crud.UserManageableService)
            getContext().getBean("UserManageableService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.user.crud.UserLocationManageableService}.
     */
    public final com.jrsystems.jrbase.user.crud.UserLocationManageableService getUserLocationManageableService()
    {
        return (com.jrsystems.jrbase.user.crud.UserLocationManageableService)
            getContext().getBean("UserLocationManageableService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.organisation.crud.OrganisationManageableService}.
     */
    public final com.jrsystems.jrbase.organisation.crud.OrganisationManageableService getOrganisationManageableService()
    {
        return (com.jrsystems.jrbase.organisation.crud.OrganisationManageableService)
            getContext().getBean("OrganisationManageableService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableService}.
     */
    public final com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableService getOrganisationTypeManageableService()
    {
        return (com.jrsystems.jrbase.organisation.crud.OrganisationTypeManageableService)
            getContext().getBean("OrganisationTypeManageableService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.location.crud.LocationTypeManageableService}.
     */
    public final com.jrsystems.jrbase.location.crud.LocationTypeManageableService getLocationTypeManageableService()
    {
        return (com.jrsystems.jrbase.location.crud.LocationTypeManageableService)
            getContext().getBean("LocationTypeManageableService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.location.crud.LocationManageableService}.
     */
    public final com.jrsystems.jrbase.location.crud.LocationManageableService getLocationManageableService()
    {
        return (com.jrsystems.jrbase.location.crud.LocationManageableService)
            getContext().getBean("LocationManageableService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.counter.crud.CounterManageableService}.
     */
    public final com.jrsystems.jrbase.counter.crud.CounterManageableService getCounterManageableService()
    {
        return (com.jrsystems.jrbase.counter.crud.CounterManageableService)
            getContext().getBean("CounterManageableService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.role.crud.RoleManageableService}.
     */
    public final com.jrsystems.jrbase.role.crud.RoleManageableService getRoleManageableService()
    {
        return (com.jrsystems.jrbase.role.crud.RoleManageableService)
            getContext().getBean("RoleManageableService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableService}.
     */
    public final com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableService getClearanceLevelManageableService()
    {
        return (com.jrsystems.jrbase.clearancelevel.crud.ClearanceLevelManageableService)
            getContext().getBean("ClearanceLevelManageableService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableService}.
     */
    public final com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableService getLoginSessionManageableService()
    {
        return (com.jrsystems.jrbase.loginsession.crud.LoginSessionManageableService)
            getContext().getBean("LoginSessionManageableService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.workbench.program.crud.ProgramManageableService}.
     */
    public final com.jrsystems.jrbase.workbench.program.crud.ProgramManageableService getProgramManageableService()
    {
        return (com.jrsystems.jrbase.workbench.program.crud.ProgramManageableService)
            getContext().getBean("ProgramManageableService");
    }

    /**
     * Gets an instance of {@link com.jrsystems.jrbase.workbench.menu.crud.MenuManageableService}.
     */
    public final com.jrsystems.jrbase.workbench.menu.crud.MenuManageableService getMenuManageableService()
    {
        return (com.jrsystems.jrbase.workbench.menu.crud.MenuManageableService)
            getContext().getBean("MenuManageableService");
    }


    /**
     * Gets an instance of the given service.
     */
    public final Object getService(String serviceName)
    {
        return getContext().getBean(BEAN_PREFIX + serviceName);
    }

}