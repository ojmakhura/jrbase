<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
     Attention: Generated code! Do not modify by hand!
     Generated by: hibernate3/hibernate.hbm.xml.vsl in andromda-hibernate-cartridge.
  -->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
          "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-cascade="none">
    <class name="com.systemsjr.jrbase.user.UserLocationImpl"
        table="USER_LOCATIONS" dynamic-insert="false" dynamic-update="false">
        <id name="id" type="java.lang.Long" unsaved-value="null">
            <column name="ID" sql-type="BIGINT"/>
            <generator class="native">
                <!-- id-generator merge-point -->
            </generator>
        </id>
        <property name="status">
            <column name="STATUS" not-null="true" unique="false" sql-type="VARCHAR(255) BINARY"/>
            <type name="org.andromda.persistence.hibernate.usertypes.HibernateEnumType">
                 <param name="enumClassName">com.systemsjr.jrbase.user.UserLocationStatus</param>
            </type>
        </property>
        <property name="fromDate">
            <column name="FROM_DATE" not-null="false" unique="true" sql-type="TIMESTAMP"/>
            <type name="java.sql.Timestamp"/>
        </property>
        <property name="toDate">
            <column name="TO_DATE" not-null="false" unique="true" sql-type="TIMESTAMP"/>
            <type name="java.sql.Timestamp"/>
        </property>
        <many-to-one name="location" class="com.systemsjr.jrbase.location.LocationImpl" foreign-key="USER_LOCATIONS_LOCATION_FKC" cascade="delete" lazy="proxy" fetch="select">
            <column name="LOCATION_FK" not-null="true" sql-type="BIGINT" unique="true"/>
        </many-to-one>
        <many-to-one name="user" class="com.systemsjr.jrbase.user.UserImpl" cascade="delete" foreign-key="USER_LOCATIONS_USER_FKC" not-null="true" lazy="proxy" fetch="select">
            <column name="USER_FK" not-null="true" sql-type="BIGINT"/>
        </many-to-one>
    </class>
</hibernate-mapping>
